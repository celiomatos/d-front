version: '3'
services:
  d-server-db:
    image: postgres:11
    container_name: d_postgres
    restart: always
    networks:
      - d_network
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=d_db
    ports:
      - '5432:5432'
    volumes:
      - d_data:/var/lib/postgresql/data
  d-server-auth:
    build: docker-files/docker_auth
    container_name: d_auth
    ports:
      - '8081:8081'
    networks:
      - d_network
    depends_on:
      - 'd-server-db'
  d-server-schedule:
    build: docker-files/docker_schedule
    container_name: d_schedule
    ports:
      - '8082:8082'
    networks:
      - d_network
    depends_on:
      - 'd-server-db'
      - 'd-server-auth'
      - 'd-server-scraper'
  d-server-scraper:
    build: docker-files/docker_scraper
    container_name: d_scraper
    ports:
      - '8083:8083'
    networks:
      - d_network
    depends_on:
      - 'd-server-db'
      - 'd-server-auth'
  d-server-main:
    build: docker-files/docker_main
    container_name: d_main
    ports:
      - '8084:8084'
    networks:
      - d_network
    depends_on:
      - 'd-server-db'
      - 'd-server-auth'
  d-front:
    build: docker-files/docker_front
    container_name: d_front
    ports:
      - '80:80'
    networks:
      - d_network
    depends_on:
      - 'd-server-db'
      - 'd-server-auth'
      - 'd-server-main'
volumes:
  d_data:
networks:
  d_network:
    driver: bridge
